---
version: 2.1

orbs:
    codecov: codecov/codecov@1.0.5
    browser-tools: circleci/browser-tools@0.1.3
    win: circleci/windows@2.4.0

_refs:
    defaults: &defaults
        working_directory: ~/cli
        docker:
            - image: node:12
    restore_cache: &restore_cache
        keys:
            - dependency-cache-3-{{ checksum "yarn.lock" }}
    install: &install
        name: Install dependencies
        command: |
            yarn --version
            node --version
            yarn

jobs:
    build:
        docker:
            - image: circleci/node:10.15.3-browsers
        steps:
            - checkout
            - restore_cache: *restore_cache
            - browser-tools/install-chrome:
                  replace-existing: true
            - run: yarn install --frozen-lockfile
            - run: yarn build
            - run: yarn lint:ci
            - run: yarn test:ci
            - run: yarn test:e2e-ci
            - codecov/upload:
                  file: reports/coverage/*.json
                  flags: frontend,backend
            - store_test_results:
                  path: reports
            - store_artifacts:
                  path: reports
            - store_artifacts:
                  path: errorShots
            - save_cache:
                  key: dependency-cache-3-{{ checksum "yarn.lock" }}
                  paths:
                      - node_modules
                      - ~/.cache/yarn
            - persist_to_workspace:
                  root: .
                  paths:
                      - .git
                      - package.json
                      - oclif.manifest.json
                      - yarn.lock
                      - README.md
                      - bin
                      - dist
                      - modules
                      - lib

    build-and-test-win:
        executor: win/default
        environment:
            # alias variable created by auth and referenced by test framework
            - SFDC_ALIAS: local-dev-user
        steps:
            - checkout
            - restore_cache:
                  key: dependency-cache-win-{{ checksum "yarn.lock" }}
            - run:
                  shell: bash.exe
                  command: |
                      node --version
                      npm install -g sfdx-cli@latest
                      sfdx --version
            - run:
                  name: 'Authenticate to local dev testing org'
                  shell: bash.exe
                  command: |
                      echo $SFDC_JWT_KEY | base64 --decode > localdev.key
                      sfdx force:auth:jwt:grant --clientid ${SFDC_CLIENTID} --username ${SFDC_USERNAME} --setalias ${SFDC_ALIAS} --jwtkeyfile $PWD/localdev.key --setdefaultusername --setdefaultdevhubusername
                      sfdx force:auth:list
            - run:
                  shell: bash.exe
                  command: |
                      choco install googlechrome --ignore-checksums
            - run: yarn install --frozen-lockfile
            - run: yarn build
            - run: yarn test:ci
            # - run:
            #       shell: bash.exe
            #       command: |
            #           yarn test:e2e-ci
            - store_test_results:
                  path: reports
            - store_artifacts:
                  path: reports
            - store_artifacts:
                  path: errorShots
            - save_cache:
                  key: dependency-cache-win-{{ checksum "yarn.lock" }}
                  paths:
                      - node_modules
                      - ~/.cache/yarn

    build-artifact:
        <<: *defaults
        description: 'Building and archiving tarball'
        steps:
            - checkout
            - restore_cache: *restore_cache
            - run: *install
            - run: yarn build
            - run: npm pack # using npm vs yarn since yarn does not support npmignore mixed with package.json config
            - run:
                  name: Staging artifact
                  command: |
                      mkdir artifact
                      find . -name "*.tgz" -type f -exec cp {} ./artifact \;
            - store_artifacts:
                  path: ./artifact

workflows:
    version: 2.1
    'lwc-dev-server':
        jobs:
            - build
            - build-artifact
            - build-and-test-win:
                  context: local-dev-gs0
            - build-and-test-win:
                  context: local-dev-r2
